/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.jebsoftware.telas;

import br.com.jebsoftware.classes.ContaCorrente;
import br.com.jebsoftware.classes.Movimentacao;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author TitanNot
 */
public class EfetuaTransferencia extends javax.swing.JFrame {

ArrayList<ContaCorrente> lista_de_contas = CriaConta.lista_de_contas;
    /**
     * Creates new form EfetuaTransferencia
     */
    public EfetuaTransferencia() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbContaCorrenteOrigem = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmbContaCorrenteDestino = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtValorTransferencia = new javax.swing.JTextField();
        btnEfetuarDeposito = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Efetuando transferência entre contas");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Efetuando transferência");

        jLabel2.setText("Conta-corrente de origem");

        cmbContaCorrenteOrigem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbContaCorrenteOrigemActionPerformed(evt);
            }
        });

        jLabel4.setText("Conta-corrente de destino");

        cmbContaCorrenteDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbContaCorrenteDestinoActionPerformed(evt);
            }
        });

        jLabel3.setText("Informe o valor do depósito");

        btnEfetuarDeposito.setText("Efetuar Transferência");
        btnEfetuarDeposito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEfetuarDepositoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(btnEfetuarDeposito))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbContaCorrenteOrigem, 0, 182, Short.MAX_VALUE)
                            .addComponent(cmbContaCorrenteDestino, 0, 182, Short.MAX_VALUE)
                            .addComponent(txtValorTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbContaCorrenteOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbContaCorrenteDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorTransferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEfetuarDeposito)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbContaCorrenteOrigemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbContaCorrenteOrigemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbContaCorrenteOrigemActionPerformed

    private void cmbContaCorrenteDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbContaCorrenteDestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbContaCorrenteDestinoActionPerformed

    private void btnEfetuarDepositoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEfetuarDepositoActionPerformed
        int numerocontaorigem = Integer.parseInt((String) cmbContaCorrenteOrigem.getSelectedItem());
        int numerocontadestino = Integer.parseInt((String) cmbContaCorrenteDestino.getSelectedItem());
        boolean permiteTransferir = false;
        
        if(numerocontaorigem == numerocontadestino){
            JOptionPane.showMessageDialog(null,"Não é possível efetuar transferência de contas iguais!");
        }else{
            float valorTransferencia = Float.parseFloat(txtValorTransferencia.getText());
            for(int i=0;i<lista_de_contas.size();i++){
                if(numerocontaorigem == lista_de_contas.get(i).getNumero()){
                    if(valorTransferencia <= lista_de_contas.get(i).getSaldo()){
                        if(valorTransferencia <= lista_de_contas.get(i).getLimite()){
                            permiteTransferir = true;
                            float saldoatual = lista_de_contas.get(i).getSaldo();
                            //lista_de_contas.get(i).setSaldo(saldoatual - valorTransferencia);
                            
                            Movimentacao movimentacao = new Movimentacao();
                            movimentacao.setCredito(false);
                            movimentacao.setDescricao("Efetuado transferência para conta: "+numerocontadestino);
                            movimentacao.setValor(valorTransferencia);
                            
                            lista_de_contas.get(i).setSaldo(saldoatual-valorTransferencia,movimentacao);
                        }else{
                            JOptionPane.showMessageDialog(null, "O valor da transferência não pode ser maior que o limite da conta!");
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "O valor da transferência não pode ser maior que o saldo da conta!");
                    }
                }
            }
            
            if(permiteTransferir == true){
                for(int i=0;i<lista_de_contas.size();i++){
                    if(numerocontadestino == lista_de_contas.get(i).getNumero()){
                        float saldoatual = lista_de_contas.get(i).getSaldo();
                        //lista_de_contas.get(i).setSaldo(saldoatual + valorTransferencia);
                        
                        Movimentacao movimentacao = new Movimentacao();
                        movimentacao.setCredito(true);
                        movimentacao.setDescricao("Recebido transferência da conta: "+numerocontaorigem);
                        movimentacao.setValor(valorTransferencia);
                
                        lista_de_contas.get(i).setSaldo(valorTransferencia,movimentacao);
                        
                        JOptionPane.showMessageDialog(null,"Transferência realizada com sucesso da conta: "+numerocontaorigem+" Para a conta: "+numerocontadestino);
                        
                        this.dispose();
                    }
                }
            }else{
                
            }
        }
    }//GEN-LAST:event_btnEfetuarDepositoActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        for(int i=0;i<lista_de_contas.size();i++){
            cmbContaCorrenteOrigem.addItem(String.valueOf(lista_de_contas.get(i).getNumero()));
            cmbContaCorrenteDestino.addItem(String.valueOf(lista_de_contas.get(i).getNumero()));
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EfetuaTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EfetuaTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EfetuaTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EfetuaTransferencia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EfetuaTransferencia().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEfetuarDeposito;
    private javax.swing.JComboBox<String> cmbContaCorrenteDestino;
    private javax.swing.JComboBox<String> cmbContaCorrenteOrigem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtValorTransferencia;
    // End of variables declaration//GEN-END:variables
}
